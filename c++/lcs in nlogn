int ce(vector<int> &v,int l, int r, int key){
    while(r-l>1){
        int m=l+(r-1) /2;
        if(v[m]>=key)
        r=m;
        else l=m;
    }
    return r;
}
int lcs(vector<int>& v){
    if(v.size()==0) return 0;
    vector<int>t(v.size(),0);
    int l=1;
    t[0]=v[0];
    for(int i=0;i<v.size();i++){
        if(v[i]<t[0]) t[0]=v[i];
        else if(v[i]>t[l-1]) t[l++]=v[i];
        else t[ce(t,-1,l-1,v[i])]=v[i];
    }
    return l;
}



int Solution::solve(vector<int> &a, vector<int> &b, int k) {
    int i,j,n=a.size(),m=b.size();
    vector<int>c(m);
    vector<int>mp(n);
    for(i=0;i<n;i++){
        mp[a[i]]=i;
    }
    for(i=0;i<n;i++){
        //if(mp.find(b[i])!=mp.end){
            c[i]=mp[b[i]];
        //}
        
    }
    return (m-lcs(c) )*k;
}
